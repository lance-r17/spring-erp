buildscript {
	ext {
		springBootVersion = '1.3.2.RELEASE'
	}
	repositories {
		jcenter()
		mavenCentral()
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'spring-erp'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	mavenCentral()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/webapp'
		}
	}
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task npmInstall(type:Exec) {
	workingDir 'src/main/webapp'
	commandLine 'npm', 'install'
}

task webpack(type:Exec, dependsOn:npmInstall) {
	workingDir 'src/main/webapp'
	commandLine 'npm', 'run', 'webpack'
}

tasks.idea {
	dependsOn = [cleanIdeaModule, ideaModule, npmInstall]
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}
